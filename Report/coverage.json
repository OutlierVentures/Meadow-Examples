{
  "SolidityCompilerVersion": "0.4.25",
  "SourceFileMaps": [
    {
      "IndexHtmlFilePath": "../index.html",
      "SolidityCompilerVersion": "0.4.25",
      "SourceFileIndex": 0,
      "SourceFilePath": "ERC20Basic.sol",
      "SourceFileName": "ERC20Basic.sol",
      "SourceFileDirectory": "",
      "SourceHashSha256": "B17932681D1162B15DCFE6B48A56B2529B2D9BD7E8C54991757CBCEEF66B9C71",
      "SourceFileLines": [
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 1,
          "LiteralSourceCodeLine": "pragma solidity ^0.4.19;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 0,
          "OffsetEnd": 24,
          "Length": 24
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 2,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 25,
          "OffsetEnd": 25,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 3,
          "LiteralSourceCodeLine": "contract ERC20Basic {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 26,
          "OffsetEnd": 47,
          "Length": 21
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 4,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 48,
          "OffsetEnd": 48,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 5,
          "LiteralSourceCodeLine": "    string public constant name = \"ERC20Basic\";",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 49,
          "OffsetEnd": 96,
          "Length": 47
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 6,
          "LiteralSourceCodeLine": "    string public constant symbol = \"BSC\";",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 97,
          "OffsetEnd": 139,
          "Length": 42
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 7,
          "LiteralSourceCodeLine": "    uint8 public constant decimals = 18;  ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 140,
          "OffsetEnd": 182,
          "Length": 42
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 8,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 183,
          "OffsetEnd": 183,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 9,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 184,
          "OffsetEnd": 184,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 10,
          "LiteralSourceCodeLine": "    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 185,
          "OffsetEnd": 270,
          "Length": 85
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 11,
          "LiteralSourceCodeLine": "    event Transfer(address indexed from, address indexed to, uint tokens);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 271,
          "OffsetEnd": 345,
          "Length": 74
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 12,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 346,
          "OffsetEnd": 346,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 13,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 347,
          "OffsetEnd": 347,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 14,
          "LiteralSourceCodeLine": "    mapping(address => uint256) balances;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 348,
          "OffsetEnd": 389,
          "Length": 41
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 15,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 390,
          "OffsetEnd": 390,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 16,
          "LiteralSourceCodeLine": "    mapping(address => mapping (address => uint256)) allowed;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 391,
          "OffsetEnd": 452,
          "Length": 61
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 17,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 453,
          "OffsetEnd": 457,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 18,
          "LiteralSourceCodeLine": "    uint256 totalSupply_;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 458,
          "OffsetEnd": 483,
          "Length": 25
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 19,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 484,
          "OffsetEnd": 484,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 20,
          "LiteralSourceCodeLine": "    using SafeMath for uint256;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 485,
          "OffsetEnd": 516,
          "Length": 31
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 21,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 517,
          "OffsetEnd": 517,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 22,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 518,
          "OffsetEnd": 518,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 23,
          "LiteralSourceCodeLine": "   constructor(uint256 total) public {  ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 519,
          "OffsetEnd": 559,
          "Length": 40
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 24,
          "LiteralSourceCodeLine": "\ttotalSupply_ = total;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 560,
          "OffsetEnd": 582,
          "Length": 22
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 25,
          "LiteralSourceCodeLine": "\tbalances[msg.sender] = totalSupply_;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 583,
          "OffsetEnd": 620,
          "Length": 37
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 26,
          "LiteralSourceCodeLine": "    }  ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 621,
          "OffsetEnd": 628,
          "Length": 7
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 27,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 629,
          "OffsetEnd": 629,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 28,
          "LiteralSourceCodeLine": "    function totalSupply() public view returns (uint256) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 630,
          "OffsetEnd": 688,
          "Length": 58
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 29,
          "LiteralSourceCodeLine": "\treturn totalSupply_;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 689,
          "OffsetEnd": 710,
          "Length": 21
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 30,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 711,
          "OffsetEnd": 716,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 31,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 717,
          "OffsetEnd": 721,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 32,
          "LiteralSourceCodeLine": "    function balanceOf(address tokenOwner) public view returns (uint) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 722,
          "OffsetEnd": 793,
          "Length": 71
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 33,
          "LiteralSourceCodeLine": "        return balances[tokenOwner];",
          "ExecutionCount": 3,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 794,
          "OffsetEnd": 830,
          "Length": 36
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 34,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 831,
          "OffsetEnd": 836,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 35,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 837,
          "OffsetEnd": 837,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 36,
          "LiteralSourceCodeLine": "    function transfer(address receiver, uint numTokens) public returns (bool) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 838,
          "OffsetEnd": 917,
          "Length": 79
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 37,
          "LiteralSourceCodeLine": "        require(numTokens <= balances[msg.sender]);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "if",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 918,
          "OffsetEnd": 969,
          "Length": 51
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 38,
          "LiteralSourceCodeLine": "        balances[msg.sender] = balances[msg.sender].sub(numTokens);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 970,
          "OffsetEnd": 1037,
          "Length": 67
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 39,
          "LiteralSourceCodeLine": "        balances[receiver] = balances[receiver].add(numTokens);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1038,
          "OffsetEnd": 1101,
          "Length": 63
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 40,
          "LiteralSourceCodeLine": "        emit Transfer(msg.sender, receiver, numTokens);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1102,
          "OffsetEnd": 1157,
          "Length": 55
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 41,
          "LiteralSourceCodeLine": "        return true;",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1158,
          "OffsetEnd": 1178,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 42,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1179,
          "OffsetEnd": 1184,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 43,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1185,
          "OffsetEnd": 1185,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 44,
          "LiteralSourceCodeLine": "    function approve(address delegate, uint numTokens) public returns (bool) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1186,
          "OffsetEnd": 1264,
          "Length": 78
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 45,
          "LiteralSourceCodeLine": "        allowed[msg.sender][delegate] = numTokens;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1265,
          "OffsetEnd": 1315,
          "Length": 50
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 46,
          "LiteralSourceCodeLine": "        Approval(msg.sender, delegate, numTokens);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1316,
          "OffsetEnd": 1366,
          "Length": 50
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 47,
          "LiteralSourceCodeLine": "        return true;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1367,
          "OffsetEnd": 1387,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 48,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1388,
          "OffsetEnd": 1393,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 49,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1394,
          "OffsetEnd": 1394,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 50,
          "LiteralSourceCodeLine": "    function allowance(address owner, address delegate) public view returns (uint) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1395,
          "OffsetEnd": 1479,
          "Length": 84
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 51,
          "LiteralSourceCodeLine": "        return allowed[owner][delegate];",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1480,
          "OffsetEnd": 1520,
          "Length": 40
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 52,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1521,
          "OffsetEnd": 1526,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 53,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1527,
          "OffsetEnd": 1527,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 54,
          "LiteralSourceCodeLine": "    function transferFrom(address owner, address buyer, uint numTokens) public returns (bool) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1528,
          "OffsetEnd": 1623,
          "Length": 95
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 55,
          "LiteralSourceCodeLine": "        require(numTokens <= balances[owner]);    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 1624,
          "OffsetEnd": 1674,
          "Length": 50
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 56,
          "LiteralSourceCodeLine": "        require(numTokens <= allowed[owner][msg.sender]);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 1675,
          "OffsetEnd": 1732,
          "Length": 57
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 57,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1733,
          "OffsetEnd": 1737,
          "Length": 4
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 58,
          "LiteralSourceCodeLine": "        balances[owner] = balances[owner].sub(numTokens);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1738,
          "OffsetEnd": 1795,
          "Length": 57
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 59,
          "LiteralSourceCodeLine": "        allowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1796,
          "OffsetEnd": 1875,
          "Length": 79
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 60,
          "LiteralSourceCodeLine": "        balances[buyer] = balances[buyer].add(numTokens);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1876,
          "OffsetEnd": 1933,
          "Length": 57
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 61,
          "LiteralSourceCodeLine": "        Transfer(owner, buyer, numTokens);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1934,
          "OffsetEnd": 1976,
          "Length": 42
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 62,
          "LiteralSourceCodeLine": "        return true;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1977,
          "OffsetEnd": 1997,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 63,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1998,
          "OffsetEnd": 2003,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 64,
          "LiteralSourceCodeLine": "}",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2004,
          "OffsetEnd": 2005,
          "Length": 1
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 65,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2006,
          "OffsetEnd": 2006,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 66,
          "LiteralSourceCodeLine": "library SafeMath { ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2007,
          "OffsetEnd": 2026,
          "Length": 19
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 67,
          "LiteralSourceCodeLine": "    function sub(uint256 a, uint256 b) internal pure returns (uint256) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2027,
          "OffsetEnd": 2099,
          "Length": 72
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 68,
          "LiteralSourceCodeLine": "      assert(b <= a);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "if",
          "BranchType": "assert",
          "IsBranch": true,
          "Offset": 2100,
          "OffsetEnd": 2121,
          "Length": 21
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 69,
          "LiteralSourceCodeLine": "      return a - b;",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2122,
          "OffsetEnd": 2141,
          "Length": 19
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 70,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2142,
          "OffsetEnd": 2147,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 71,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2148,
          "OffsetEnd": 2152,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 72,
          "LiteralSourceCodeLine": "    function add(uint256 a, uint256 b) internal pure returns (uint256) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2153,
          "OffsetEnd": 2225,
          "Length": 72
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 73,
          "LiteralSourceCodeLine": "      uint256 c = a + b;",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2226,
          "OffsetEnd": 2250,
          "Length": 24
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 74,
          "LiteralSourceCodeLine": "      assert(c >= a);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "if",
          "BranchType": "assert",
          "IsBranch": true,
          "Offset": 2251,
          "OffsetEnd": 2272,
          "Length": 21
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 75,
          "LiteralSourceCodeLine": "      return c;",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2273,
          "OffsetEnd": 2288,
          "Length": 15
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 76,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2289,
          "OffsetEnd": 2294,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 77,
          "LiteralSourceCodeLine": "}",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2295,
          "OffsetEnd": 2296,
          "Length": 1
        }
      ],
      "LineCount": 26,
      "LineCoveredCount": 13,
      "LineCoveragePercent": 50.0,
      "BranchCount": 10,
      "BranchCoveredCount": 3,
      "BranchCoveragePercent": 30.0,
      "FunctionCount": 9,
      "FunctionCoveredCount": 5,
      "FunctionCoveragePercent": 55.56
    }
  ],
  "UnitTestOutcome": [
    [
      {
        "Namespace": "TokenContract.TokenContractTests",
        "TestName": "ValidateTransferResult",
        "Passed": true,
        "Duration": "00:00:34.7459530"
      }
    ]
  ],
  "LineCount": 26,
  "LineCoveredCount": 13,
  "LineCoveragePercent": 50.0,
  "BranchCount": 10,
  "BranchCoveredCount": 3,
  "BranchCoveragePercent": 30.0,
  "FunctionCount": 9,
  "FunctionCoveredCount": 5,
  "FunctionCoveragePercent": 55.56
}